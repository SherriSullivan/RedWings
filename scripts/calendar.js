/**** Calendar Scripts for 2020 Red Wings site ****//*** Create the backbone of the calendar ***//*** and call getGames_api.js for game info ***/// get current monthvar thisMonth = new Date().getMonth();// switch the month number to the tab number// October through April - hockey seasonswitch(thisMonth) {	case 8:	  thisMonth = 0;	  break;	case 9:	  thisMonth = 1;	  break;	case 10:	  thisMonth = 2;	  break;	case 11:	  thisMonth = 3;	  break;	case 0:	  thisMonth = 4;	  break;	case 1:	  thisMonth = 5;	  break;	case 2:	  thisMonth = 6;	  break;	case 3:	  thisMonth = 7;	  break;	default:	  thisMonth = 8;}//on initial load show current monthfunction startMonth() {	showMonth(thisMonth);}//on user request change monthfunction chMonth(n) {	showMonth(thisMonth = n);}function showMonth(n) {	let season = document.querySelectorAll(".month");	let tabs = document.querySelectorAll(".monthtab");	console.log(season);		//if season is over or no month is selected, show 1st month	if (n >= season.length || !n) { thisMonth = 0; }		//nothing visible, nothing active	for (let i = 0, l = season.length; i < l; i++) {		season[i].style.display = "none";		tabs[i].className = tabs[i].className.replace(" active", "");	}		//display selected month and give class active	season[thisMonth].style.display = "block";	tabs[thisMonth].className += " active";}/***  Fill in the games  ***/// old-fashioned async// TODO - bring up-to-datefunction wait() {	if( !done ) {		setTimeout(wait, 100);	} else {		processGames();	}}function processGames() {	for (let i = 0, l = games.length; i < l; i++) {		let rowID = document.getElementById(games[i].gameDate);				let teams = document.createElement("p");		teams.setAttribute("class", "teams");		rowID.appendChild(teams);		if (games[i].homeAway === 'home') {			teams.innerHTML = games[i].homeTeamAbbr + ' vs ' + games[i].awayTeamAbbr;			rowID.setAttribute("class", "home");		} else {			teams.innerHTML = games[i].awayTeamAbbr + ' @ ' + games[i].homeTeamAbbr;			rowID.setAttribute("class", "away");		}		if ( games[i].gameDate < dayID ) {			let score = document.createElement("p");			score.setAttribute("class", "score");			rowID.appendChild(score);			let points = document.createElement("p");			points.setAttribute("class", "points");			rowID.appendChild(points);			score.innerHTML = games[i].awayScore + ' - ' + games[i].homeScore;			points.innerHTML = games[i].detRecord;			rowID.classList.add(games[i].gameResult);		}	}}wait();